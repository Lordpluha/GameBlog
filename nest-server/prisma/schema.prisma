generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  role      String    @default("User")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  isEditor  Boolean   @default(false)
  articles  Article[]
  blogs     Blog[]
  token     Token?
}

model Token {
  id           Int      @id @default(autoincrement())
  refreshToken String   @unique
  userId       Int      @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model Blog {
  id        Int      @id @default(autoincrement())
  title     String
  preview   String
  content   String
  slug      String?  @unique
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
}

model Tags {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  slug      String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Article {
  id         Int                    @id @default(autoincrement())
  title      String
  content    String
  preview    String
  slug       String?                @unique
  isVerif    Boolean                @default(false)
  authorId   Int
  createdAt  DateTime               @default(now())
  updatedAt  DateTime               @updatedAt
  author     User                   @relation(fields: [authorId], references: [id])
  categories CategoriesOnArticles[]
}

model Category {
  id        Int                    @id @default(autoincrement())
  name      String                 @unique
  slug      String?                @unique
  createdAt DateTime               @default(now())
  updatedAt DateTime               @updatedAt
  articles  CategoriesOnArticles[]
}

model CategoriesOnArticles {
  articleId  Int
  categoryId Int
  assignedAt DateTime @default(now())
  category   Category @relation(fields: [categoryId], references: [id])
  article    Article  @relation(fields: [articleId], references: [id])

  @@id([articleId, categoryId])
}
